# Trigger the pipeline on develop/main branches and all MRs (except develop merge to main)
workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_COMMIT_TAG'

image: continuumio/anaconda3

before_script:
  - apt update
  - apt install -y gcc g++
  - conda env create -f environment.yml
  - conda init bash
  - source ~/.bashrc
  - conda activate medkit

stages:
  - test
  - publish

linting:
  stage: test
  script:
    - echo "Executing linting..."
    - flake8 .
    - black --check .
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always

unit_tests:
  stage: test
  script:
    - echo "Executing unit tests..."
    - coverage run -m pytest -v --junit-xml=report.xml tests/unit
    - coverage report
    - coverage xml
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    reports:
      cobertura: coverage.xml
      junit: report.xml
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always

# TODO: activate weekly job to verify non-regression ?
large_tests:
  stage: test
  script:
    - echo "Executing large tests..."
    - pytest -v tests/large
  interruptible: true
  rules:
    - when: never

release:
  stage: publish
  script:
    - pip install build
    - pip install twine
    - python -m build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  rules:
    - if: '$CI_COMMIT_TAG'
