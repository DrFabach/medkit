# Trigger the pipeline on develop/main branches and all MRs (except develop merge to main)
workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_COMMIT_TAG'

stages:
  - test
  - publish

# Declare common job configurations
.medkit-jobs:
  image: condaforge/mambaforge
  before_script:
    - apt update
    - apt install -y gcc g++
    - mamba env create -f environment.yml
    - source /opt/conda/bin/activate
    - conda init bash
    - source ~/.bashrc
    - conda activate medkit
    - poetry config virtualenvs.create true --local
    - poetry config virtualenvs.in-project --local
    - poetry install -E optional -E hf-translator
  interruptible: true

.medkit-docs-jobs:
  tags:
    - linux
  image: condaforge/mambaforge
  before_script:
    - DEBIAN_FRONTEND=noninteractive apt update
    - DEBIAN_FRONTEND=noninteractive apt install -y graphviz
    - mamba env create -f docs/environment.yml
    - source /opt/conda/bin/activate
    - conda init bash
    - source ~/.bashrc
    - conda activate medkit-docs
  interruptible: true

# Declare test jobs
linting:
  extends: .medkit-jobs
  stage: test
  script:
    - echo "Executing linting..."
    - poetry run flake8 .
    - poetry run black --check .
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always

unit_tests:
  extends: .medkit-jobs
  stage: test
  script:
    - echo "Executing unit tests..."
    - poetry run coverage run -m pytest -v --junit-xml=report.xml tests/unit
    - poetry run coverage report
    - poetry run coverage xml
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always

# TODO: activate weekly job to verify non-regression ?
large_tests:
  extends: .medkit-jobs
  stage: test
  script:
    - echo "Executing large tests..."
    - poetry pytest -v tests/large
  rules:
    - when: never

# Declare release jobs
release:
  extends: .medkit-jobs
  stage: publish
  script:
    - poetry build
    - poetry config repositories.gitlab "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
    - poetry publish -r gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN}
  rules:
    - if: '$CI_COMMIT_TAG'

# Declare documentation jobs
doc-test:
  extends: .medkit-docs-jobs
  stage: test
  script:
    - jb build docs
    - mv docs/_build/jupyter_execute .
    - mv docs/_build/html test
  artifacts:
    paths:
      - test
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always

doc-release:
  extends: .medkit-docs-jobs
  stage: test
  script:
    - jb build docs
    - mv docs/_build/jupyter_execute .
    - mv docs/_build/html public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_TAG'
